name: Checks

on:
  workflow_call:
    secrets:
      ALTERNATIVE_GITHUB_TOKEN:
        required: false

jobs:

  Version-Check:
    name: Version
    runs-on: ubuntu-latest

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.18.0

      - name: Check Version(s)
        run: poetry run version-check version.py

  Documentation:
    name: Build Documentation
    needs: [ Version-Check ]
    runs-on: ubuntu-latest

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v4

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.18.0

      - name: Build Documentation
        run: |
          poetry run python -m nox -s docs:build

  Lint:
    name: Linting (Python-${{ matrix.python-version }})
    needs: [ Version-Check ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v4

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.18.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run lint
        run: poetry run nox -s lint:code

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.4.0
        with:
          name: lint-python${{ matrix.python-version }}
          path: .lint.txt
          include-hidden-files: true

  Type-Check:
    name: Type Checking (Python-${{ matrix.python-version }})
    needs: [ Version-Check ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v4

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.18.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run type-check
        run: poetry run nox -s lint:typing

  Security:
    name: Security Checks (Python-${{ matrix.python-version }})
    needs: [ Version-Check ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
       - name: SCM Checkout
         uses: actions/checkout@v4
       - name: Setup Python & Poetry Environment
         uses: exasol/python-toolbox/.github/actions/python-environment@0.18.0
         with:
           python-version: ${{ matrix.python-version }}
       - name: Run security linter
         run: poetry run nox -s lint:security
       - name: Upload Artifacts
         uses: actions/upload-artifact@v4.4.0
         with:
           name: security-python${{ matrix.python-version }}
           path: .security.json
           include-hidden-files: true

  Tests:
    name: Tests (Python-${{ matrix.python-version }}, Exasol-${{ matrix.exasol-version}})
    needs: [ Documentation, Lint, Type-Check, Security ]
    runs-on: ubuntu-24.04
    env:
      GITHUB_TOKEN: ${{ secrets.ALTERNATIVE_GITHUB_TOKEN ||  secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        exasol-version: ["7.1.26"]

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v4
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          large-packages: false
      - name: Free disk space by removing large directories
        run: |
          sudo rm -rf /usr/local/graalvm/
          sudo rm -rf /usr/local/.ghcup/
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/local/share/chromium
          sudo rm -rf /usr/local/lib/node_modules
          sudo rm -rf /opt/ghc

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.18.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Calculate Test Coverage
        run: poetry run nox -s test:coverage -- -- --db-version ${{ matrix.exasol-version }}
        env:
          PYTEST_ADDOPTS: >
            -W 'ignore::DeprecationWarning:luigi:'
            -W 'ignore::DeprecationWarning:pkg_resources:'
            -W 'ignore:pkg_resources is deprecated as an API:DeprecationWarning'
            -W 'ignore:Deprecated call to \`pkg_resources.declare_namespace:DeprecationWarning'
            -W 'ignore::DeprecationWarning:exasol_integration_test_docker_environment:'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.4.0
        with:
          name: coverage-python${{ matrix.python-version }}
          path: .coverage
          include-hidden-files: true